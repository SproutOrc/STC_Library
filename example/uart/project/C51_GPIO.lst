C51 COMPILER V9.53.0.0   C51_GPIO                                                          06/13/2015 20:14:19 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE C51_GPIO
OBJECT MODULE PLACED IN .\C51_GPIO.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\lib\src\C51_GPIO.C LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE INC
                    -DIR(..\lib\inc;..\user;..\lib\inc\mcu;..\lib\inc\sys) DEBUG OBJECTEXTEND PRINT(.\C51_GPIO.lst) TABS(2) OBJECT(.\C51_GPIO
                    -.obj)

line level    source

   1          /******************************************************************
   2          *         STC-51库/STC-51 library file
   3          *
   4          *文件名/file    : c51_gpio.h
   5          *
   6          *功能/function  : C51库GPIO操作文件
   7          *
   8          *协议/licence   : GPL开源/open GPL
   9          *
  10          *作者/author    : J.H.Chen
  11          *
  12          *时间/time      : 2015-06-10
  13          *
  14          *说明/other     : none
  15          ******************************************************************/
  16          #include "C51_Lib.h"
  17          
  18          #ifdef LIB_GPIO_USE
              /******************************************************
               * FunctionName : GPIO_Init
               * Description  : GPIO初始化
               * Parameters   : GPIO--指定端口,P0~P5 
                                GPIO_InitStruct--初始化类型
               * Returns      : none
              ******************************************************/
              void GPIO_Init(uint8 GPIO, GPIO_InitTypeDef* GPIO_InitStruct)
              {
                if(!IS_GPIO_TYPE(GPIO))
                  return;
                if(!IS_GPIOMode_Type(GPIO_InitStruct->GPIO_Mode))
                  return;
                
                switch(GPIO)
                {
                  case GPIO_P0:
                  {
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_PullUp)    P0M1 &= ~GPIO_InitStruct->GPIO_Pin, P0M0 &= ~GPIO_I
             -nitStruct->GPIO_Pin;   //上拉准双向口
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_FLOATING)  P0M1 |=  GPIO_InitStruct->GPIO_Pin, P0M0 &= ~GPIO_
             -InitStruct->GPIO_Pin;  //浮空输入
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_OD)    P0M1 |=  GPIO_InitStruct->GPIO_Pin, P0M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //开漏输出
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_PP)    P0M1 &= ~GPIO_InitStruct->GPIO_Pin, P0M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //推挽输出
                  }
                  break;
                  
                  case GPIO_P1:
                  {
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_PullUp)    P1M1 &= ~GPIO_InitStruct->GPIO_Pin, P1M0 &= ~GPIO_I
             -nitStruct->GPIO_Pin;   //上拉准双向口
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_FLOATING)  P1M1 |=  GPIO_InitStruct->GPIO_Pin, P1M0 &= ~GPIO_
             -InitStruct->GPIO_Pin;  //浮空输入
C51 COMPILER V9.53.0.0   C51_GPIO                                                          06/13/2015 20:14:19 PAGE 2   

                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_OD)    P1M1 |=  GPIO_InitStruct->GPIO_Pin, P1M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //开漏输出
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_PP)    P1M1 &= ~GPIO_InitStruct->GPIO_Pin, P1M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //推挽输出
                  }
                  break;
                  
                  case GPIO_P2:
                  {
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_PullUp)    P2M1 &= ~GPIO_InitStruct->GPIO_Pin, P2M0 &= ~GPIO_I
             -nitStruct->GPIO_Pin;   //上拉准双向口
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_FLOATING)  P2M1 |=  GPIO_InitStruct->GPIO_Pin, P2M0 &= ~GPIO_
             -InitStruct->GPIO_Pin;  //浮空输入
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_OD)    P2M1 |=  GPIO_InitStruct->GPIO_Pin, P2M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //开漏输出
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_PP)    P2M1 &= ~GPIO_InitStruct->GPIO_Pin, P2M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //推挽输出
                  }
                  break;
                  
                  case GPIO_P3:
                  {
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_PullUp)    P3M1 &= ~GPIO_InitStruct->GPIO_Pin, P3M0 &= ~GPIO_I
             -nitStruct->GPIO_Pin;   //上拉准双向口
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_FLOATING)  P3M1 |=  GPIO_InitStruct->GPIO_Pin, P3M0 &= ~GPIO_
             -InitStruct->GPIO_Pin;  //浮空输入
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_OD)    P3M1 |=  GPIO_InitStruct->GPIO_Pin, P3M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //开漏输出
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_PP)    P3M1 &= ~GPIO_InitStruct->GPIO_Pin, P3M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //推挽输出
                  }
                  break;
                  
                  case GPIO_P4:
                  {
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_PullUp)    P4M1 &= ~GPIO_InitStruct->GPIO_Pin, P4M0 &= ~GPIO_I
             -nitStruct->GPIO_Pin;   //上拉准双向口
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_FLOATING)  P4M1 |=  GPIO_InitStruct->GPIO_Pin, P4M0 &= ~GPIO_
             -InitStruct->GPIO_Pin;  //浮空输入
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_OD)    P4M1 |=  GPIO_InitStruct->GPIO_Pin, P4M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //开漏输出
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_PP)    P4M1 &= ~GPIO_InitStruct->GPIO_Pin, P4M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //推挽输出
                  }
                  break;
                  
                  case GPIO_P5:
                  {
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_PullUp)    P5M1 &= ~GPIO_InitStruct->GPIO_Pin, P5M0 &= ~GPIO_I
             -nitStruct->GPIO_Pin;   //上拉准双向口
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_FLOATING)  P5M1 |=  GPIO_InitStruct->GPIO_Pin, P5M0 &= ~GPIO_
             -InitStruct->GPIO_Pin;  //浮空输入
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_OD)    P5M1 |=  GPIO_InitStruct->GPIO_Pin, P5M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //开漏输出
                    if(GPIO_InitStruct->GPIO_Mode == GPIO_Mode_Out_PP)    P5M1 &= ~GPIO_InitStruct->GPIO_Pin, P5M0 |=  GPIO_I
             -nitStruct->GPIO_Pin;   //推挽输出
                  }
                  break;
                }
              }
              #endif

C51 COMPILER V9.53.0.0   C51_GPIO                                                          06/13/2015 20:14:19 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
