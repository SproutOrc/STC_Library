C51 COMPILER V9.53.0.0   C51_EEPROM                                                        06/13/2015 21:44:40 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE C51_EEPROM
OBJECT MODULE PLACED IN .\C51_EEPROM.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\lib\src\C51_EEPROM.C LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE I
                    -NCDIR(..\lib\inc;..\user;..\lib\inc\mcu;..\lib\inc\sys) DEBUG OBJECTEXTEND PRINT(.\C51_EEPROM.lst) TABS(2) OBJECT(.\C51_
                    -EEPROM.obj)

line level    source

   1          /******************************************************************
   2          *         STC-51库/STC-51 library file
   3          *
   4          *文件名/file    : c51_eeprom.c
   5          *
   6          *功能/function  : C51库eeprom操作
   7          *
   8          *协议/licence   : GPL开源/open GPL
   9          *
  10          *作者/author    : J.H.Chen
  11          *
  12          *时间/time      : 2015-06-12
  13          *
  14          *说明/other     : 
  15          ******************************************************************/
  16          #include "C51_Lib.h"
  17          #include <intrins.h>
  18          
  19          #ifdef LIB_EEPROM_USE
  20          /******************************************************
  21           * FunctionName : DisableEEPROM
  22           * Description  : 禁止访问EEPROM
  23           * Parameters   : none
  24           * Returns      : none
  25          ******************************************************/
  26          void  EEPROM_Disable(void)
  27          {
  28   1        IAP_CONTR = 0;      //禁止IAP/IAP操作
  29   1        IAP_CMD   = 0;      //去除IAP/IAP命令
  30   1        IAP_TRIG  = 0;      //防止IAP/IAP命令误触发
  31   1        IAP_ADDRH = 0xff;   //清0地址高字节
  32   1        IAP_ADDRL = 0xff;   //清0地址低字节，指向非EEPROM区，防止误操作
  33   1      }
  34          
  35          
  36          /******************************************************
  37           * FunctionName : EEPROM_read
  38           * Description  : EEPROM读区操作
  39           * Parameters   : addr--要读取地址  buf--存储缓冲区
  40                            num--读取字节数
  41           * Returns      : none
  42          ******************************************************/
  43          void EEPROM_read(uint16 addr, uint8 *buf, uint16 num)
  44          {
  45   1        EA = 0; 
  46   1        IAP_CONTR = ENABLE_IAP;  //允许EEP操作
  47   1        IAP_CMD = EEPROM_READ;   //可读
  48   1        do
  49   1        {
  50   2          IAP_ADDRH = addr / 256;   //送地址高字节（地址需要改变时才需重新送地址）
  51   2          IAP_ADDRL = addr % 256;   //送地址低字节
  52   2          IAP_TRIG = 0X5A;
  53   2          IAP_TRIG = 0XA5;            
C51 COMPILER V9.53.0.0   C51_EEPROM                                                        06/13/2015 21:44:40 PAGE 2   

  54   2          _nop_();
  55   2          _nop_();
  56   2          _nop_();
  57   2          _nop_();
  58   2          *buf = IAP_DATA;
  59   2          addr++;
  60   2          buf++;
  61   2        }while(--num);
  62   1      
  63   1        EEPROM_Disable();
  64   1        EA = 1; 
  65   1      }
  66          
  67          
  68          /******************************************************
  69           * FunctionName : EEPROM_read
  70           * Description  : EEPROM读区操作
  71           * Parameters   : addr--要写入的地址  buf--存储缓冲区
  72                            num--写入字节数
  73           * Returns      : none
  74          ******************************************************/
  75          void EEPROM_write(uint16 addr,uint8 *buf,uint16 num)
  76          {
  77   1        EA = 0; 
  78   1      
  79   1        IAP_CONTR = ENABLE_IAP;  //允许EEP操作
  80   1        IAP_CMD = EEPROM_WRITE;  //可写
  81   1        do
  82   1        {
  83   2          IAP_ADDRH = addr / 256;   //送地址高字节
  84   2          IAP_ADDRL = addr % 256;   //送地址低字节
  85   2          IAP_DATA  = *buf;     //送数据到IAP_DATA
  86   2          IAP_TRIG = 0X5A;
  87   2          IAP_TRIG = 0XA5;
  88   2          _nop_();
  89   2          _nop_();
  90   2          _nop_();
  91   2          _nop_();
  92   2          addr++;
  93   2          buf++;
  94   2        }while(--num);
  95   1      
  96   1        EEPROM_Disable();
  97   1        EA = 1;   
  98   1      }
  99          
 100          
 101          
 102          /******************************************************
 103           * FunctionName : EEPROM_SectorErase
 104           * Description  : EEPROM扇区擦除
 105           * Parameters   : addr--要擦除的地址
 106           * Returns      : none
 107          ******************************************************/
 108          void EEPROM_SectorErase(uint16 addr)
 109          {
 110   1        EA = 0; 
 111   1        
 112   1        IAP_CONTR = ENABLE_IAP;  //允许EEP操作
 113   1        IAP_CMD = EEPROM_ERASE;  //可读
 114   1        IAP_ADDRL = addr;
 115   1        IAP_ADDRH = addr>>8;
C51 COMPILER V9.53.0.0   C51_EEPROM                                                        06/13/2015 21:44:40 PAGE 3   

 116   1        IAP_TRIG = 0X5A;
 117   1        IAP_TRIG = 0XA5;
 118   1        _nop_();
 119   1        _nop_();
 120   1        _nop_();
 121   1        _nop_();
 122   1        EEPROM_Disable();
 123   1        EA = 1; 
 124   1      }
 125          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    175    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
