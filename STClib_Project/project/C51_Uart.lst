C51 COMPILER V9.53.0.0   C51_UART                                                          06/13/2015 21:39:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE C51_UART
OBJECT MODULE PLACED IN .\C51_Uart.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\lib\src\C51_Uart.C LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE INC
                    -DIR(..\lib\inc;..\user;..\lib\inc\mcu;..\lib\inc\sys) DEBUG OBJECTEXTEND PRINT(.\C51_Uart.lst) TABS(2) OBJECT(.\C51_Uart
                    -.obj)

line level    source

   1          /******************************************************************
   2          *         STC-51库/STC-51 library file
   3          *
   4          *文件名/file    : c51_uart.c
   5          *
   6          *功能/function  : C51库uart操作
   7          *
   8          *协议/licence   : GPL开源/open GPL
   9          *
  10          *作者/author    : J.H.Chen
  11          *
  12          *时间/time      : 2015-06-12
  13          *
  14          *说明/other     : 
  15          ******************************************************************/
  16          #include "C51_Lib.h"
  17          
  18          #ifdef LIB_UART_USE
  19          
  20          serialObj_Def idata serialObj;
  21          
  22          
  23          /******************************************************************************
  24           * FunctionName : UartInit
  25           * Description  : 串口初始化
  26           * Parameters   : baudrate--要设置的波特率
  27           * Returns      : none
  28          *******************************************************************************/
  29          void UartInit(uint32 baudrate)    
  30          {
  31   1      #ifdef   UART_USE_T1
  32   1        uint8 base = 0xFF - CPU_FAN/32.0/(double)baudrate + 1;
  33   1        PCON &= 0x7F;    //禁止波特率加倍
  34   1        SCON = 0x50;    
  35   1        AUXR |= 0x40;   //定时器1为1T模式
  36   1        AUXR &= 0xFE;   //串口选择定时器1
  37   1        TMOD &= 0x0F;   
  38   1        TMOD |= 0x20;   
  39   1        TL1 = base;   
  40   1        TH1 = base; 
  41   1        ET1 = 0;    
  42   1        TR1 = 1;  
  43   1      #else
                uint16 base = 0xFFFF - CPU_FAN/4.0/(double)baudrate;
                SCON = 0x50;    //8位数据,可变波特率
                AUXR |= 0x01;   //串口1选择定时器2为波特率发生器
                AUXR |= 0x04;   //定时器2时钟为Fosc,即1T
                T2L = base&0x00FF;    
                T2H = base>>8;    
                AUXR |= 0x10;   //启动定时器2
                
              #endif
  53   1        ES = 1;
C51 COMPILER V9.53.0.0   C51_UART                                                          06/13/2015 21:39:25 PAGE 2   

  54   1        EA = 1;
  55   1        
  56   1        serialObj.sndCount = 0;
  57   1        serialObj.sndIndex = 0;
  58   1        serialObj.revCount = 0;
  59   1        serialObj.readIndex = 0;
  60   1        serialObj.byteWaitRead = 0;
  61   1      }
  62          
  63          
  64          /******************************************************************************
  65           * FunctionName : softUART_get_byte_num
  66           * Description  : 获取等待读取字符个数
  67           * Parameters   :
  68           * Returns      :
  69          *******************************************************************************/
  70          unsigned char UARTgetByteNum()
  71          {
  72   1        return serialObj.byteWaitRead;
  73   1      }
  74          
  75          
  76          /******************************************************************************
  77           * FunctionName : softUART_get_str
  78           * Description  : 获取接收字符串
  79           * Parameters   : *str--接收缓冲区  num--要读取的数量
  80           * Returns      : 状态 当串口缓冲区的数量为零或者小于要读取的数量时,返回false
  81          *******************************************************************************/
  82          bool UARTgetStr(char *str, unsigned char num)
  83          {
  84   1        bool res = false;
  85   1        char i = 0;
  86   1        if(num < serialObj.byteWaitRead) /*当前读取字符数量有效*/
  87   1        {   
  88   2          res = true;
  89   2      
  90   2          serialObj.byteWaitRead -= num;
  91   2          serialObj.readIndex += num;
  92   2      
  93   2          while(num--)
  94   2            *str++ = serialObj.revBuf[i++];
  95   2        }
  96   1        else if(num == serialObj.byteWaitRead) /*读取当前剩余所有*/
  97   1        {
  98   2          res = true;
  99   2          serialObj.byteWaitRead = 0;
 100   2          serialObj.readIndex = 0;
 101   2          serialObj.revCount = 0;
 102   2          while(num--)
 103   2            *str++ = serialObj.revBuf[i++];
 104   2        }
 105   1      
 106   1        return res;
 107   1      }
 108          
 109          
 110          /******************************************************************************
 111           * FunctionName : UartgetChar
 112           * Description  : 从串口缓冲区中获取单个字符
 113           * Parameters   : none
 114           * Returns      : 返回读取的字符  缓冲区空白则返回EOF
 115          *******************************************************************************/
C51 COMPILER V9.53.0.0   C51_UART                                                          06/13/2015 21:39:25 PAGE 3   

 116          int UartgetChar()
 117          {
 118   1        if(serialObj.readIndex < serialObj.revCount)
 119   1        {
 120   2          serialObj.byteWaitRead--;
 121   2          return serialObj.revBuf[serialObj.readIndex++];
 122   2        }
 123   1        else
 124   1        {
 125   2          serialObj.readIndex = 0;
 126   2          serialObj.revCount = 0;
 127   2          serialObj.byteWaitRead = 0;
 128   2          return EOF;
 129   2        }
 130   1      }
 131          
 132          /******************************************************************************
 133           * FunctionName : UartwriteChar
 134           * Description  : 写单个字符
 135           * Parameters   : ch - 写入的字符
 136           * Returns      : none
 137          *******************************************************************************/
 138          void UartwriteChar(char ch)
 139          {
 140   1        if(serialObj.sndCount < BUF_SIZE-1)
 141   1          serialObj.sndBuf[serialObj.sndCount++] = ch;
 142   1        if(serialObj.sndIndex == 0)
 143   1          SBUF = ch;
 144   1      }
 145          
 146          /******************************************************************************
 147           * FunctionName : UartwriteStr
 148           * Description  : 串口输出字符串
 149           * Parameters   : *str--写入的字符串  num--发送长度;0自动获取长度
 150           * Returns      : none
 151          *******************************************************************************/
 152          void  UartwriteStr(char *str, unsigned char num)
 153          {
 154   1        if(num)
 155   1        {
 156   2          while(num--)
 157   2          {
 158   3            serialObj.sndBuf[serialObj.sndCount++] = *str++;
 159   3            if(serialObj.sndCount >= BUF_SIZE-1)
 160   3              return;
 161   3          }
 162   2        }
 163   1        else
 164   1        {   
 165   2          while(*str)
 166   2          {
 167   3            serialObj.sndBuf[serialObj.sndCount++] = *str++;
 168   3            if(serialObj.sndCount >= BUF_SIZE-1)
 169   3              return;
 170   3          }
 171   2        }
 172   1        
 173   1        if(serialObj.sndIndex == 0)
 174   1          SBUF = serialObj.sndBuf[0]; 
 175   1      }
 176          
 177          /******************************************************************************
C51 COMPILER V9.53.0.0   C51_UART                                                          06/13/2015 21:39:25 PAGE 4   

 178           * FunctionName : SerailInterrupt
 179           * Description  : 串口中断
 180           * Parameters   : none
 181           * Returns      : none
 182          *******************************************************************************/
 183          void SerailInterrupt()interrupt VECTOR_S1
 184          {
 185   1        if(RI) /*接收中断*/
 186   1        {
 187   2          RI = 0;
 188   2          if(serialObj.revCount < BUF_SIZE-1)
 189   2          {
 190   3            serialObj.revBuf[serialObj.revCount++] = SBUF;
 191   3            serialObj.byteWaitRead++;
 192   3          }
 193   2        }
 194   1      
 195   1        if(TI) /*发送中断*/
 196   1        {
 197   2          TI = 0;   
 198   2          serialObj.sndIndex += 1;
 199   2            if(serialObj.sndIndex < serialObj.sndCount)
 200   2                SBUF = *(serialObj.sndBuf+serialObj.sndIndex);
 201   2            else
 202   2            {
 203   3              serialObj.sndIndex = 0;
 204   3              serialObj.sndCount = 0;
 205   3            }
 206   2        }
 207   1      }
 208          
 209          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    482    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =    133    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
